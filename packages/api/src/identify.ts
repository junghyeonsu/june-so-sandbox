/**
 * @see https://www.june.so/docs/tracking/http-api/identify
 */
export interface IdentifyProps {
  writeKey: string;

  /**
   * @description TThe ID for this user in your database. Note: At least one of `userId` or `anonymousId` must be included in any identify call.
   */
  userId?: string;

  /**
   * @description An ID associated with the user when you don’t know who they are (for example, the `anonymousId` generated by analytics.js). Note: You must include at least one of `userId` or `anonymousId` in all identify calls.
   */
  anonymousId?: string;

  /**
   * @description A dictionary of traits you know about the user. Things like: email, name, or friends.
   */
  traits: Record<string, unknown>;

  /**
   * @description A JavaScript date object representing when the identify took place. If the identify just happened, leave it out as Segment uses the server’s time. If you’re importing data from the past, make sure to send a timestamp.
   */
  timestamp?: Date;

  /**
   * @description A dictionary of extra context to attach to the call. Note: `context` differs from `traits` because it is not attributes of the user itself.
   */
  context?: Record<string, unknown>;
}

export interface IdentifyResponse {
  status: number;
  success: boolean;
}

export const identify = (props: IdentifyProps) => {
  const { writeKey, ...restProps } = props;

  const headers = {
    Authorization: `Basic ${writeKey}`,
    "Content-Type": "application/json",
  };

  return fetch("https://api.june.so/sdk/identify", {
    method: "POST",
    headers,
    body: JSON.stringify(restProps),
  }) as Promise<Response & IdentifyResponse>;
};
